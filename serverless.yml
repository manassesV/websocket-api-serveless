service: aws-node-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1 
  environment:
      CONNECTION_DB_TABLE: ${self:resources.Resources.MessageTable.Properties.TableName}
     
  iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:PutItem"
          - "dynamodb:GetItem"
          - "dynamodb:DeleteItem"
          - "dynamodb:Scan"
        Resource:
          - Fn::GetAtt: [MessageTable, Arn]
      - Effect: Allow
        Action:
          - "execute-api:ManageConnections"
        Resource:
          - "arn:aws:execute-api:*:*:**/@connections/*"        
functions:
  connectHander:
    handler: handler.connectHandler
    events:
       - websocket:
            route: $connect
  disconnectHander:
    handler: handler.disconnectHandler
    events:
       - websocket:
            route: $disconnect
  defaultHander:
    handler: handler.defaultHandler
    events:
       - websocket:
            route: $default
  broadcastHander:
    handler: handler.sendMessageHandler
    events:
       - websocket:
            route: sendMessage
resources:
   Resources:
      MessageTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
          AttributeDefinitions:
            - AttributeName: "connectionId"
              AttributeType: "S"
          KeySchema:
            - AttributeName: "connectionId"
              KeyType: "HASH"
          BillingMode: PAY_PER_REQUEST
          TableName: AppConnectionTable